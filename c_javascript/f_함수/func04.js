// 함수 매개변수 (기본 매개변수, 나머지 매개변수) // 

// ! 1. 기본 매개변수(default)
// : 함수에 인자를 전달하지 않았을 때 사용되는 기본값 정의
// 작성방식
function defalutFunc(param1=value1, param2=value2) {

} 
// ? cf) 기본 매개변수 
//    : 값 전달을 하면 -> 전달된 값이 지정됨
//    : 값 전달이 안될때만 -> 기본값이 지정됨
//    >> 값 전달의 선택이 있는 경우, 무조건 값 할당이 필요한 데이터보다 뒤에 작성
function greet1(name='비회원 고객', age) {
  console.log(`안녕하세요. ${name} 님! ${age} 세 입니다.`);
}

greet1('정은혜', 29); // 안녕하세요. 정은혜 님! 29 세 입니다.
greet1(29); // 안녕하세요. 29 님! undefined 세 입니다. 값 전달의 선택이 있는 경우, 무조건 값 할당이 필요한 데이터보다 뒤에 작성해야함. 아래처럼!!

function greet2(age, name='비회원고객') {
  console.log(`안녕하세요. ${name} 님! ${age} 세 입니다.`);
}

greet2(29, '정은혜'); // 안녕하세요. 정은혜 님! 29 세 입니다.
greet2(29); // 안녕하세요. 비회원고객 님! 29 세 입니다.

// ! 2. 가변 매개변수
// : 함수 호출시 인자 수의 고정이 없고, 함수 내부에서 유동적으로 처리
// ? JS 는 가변 매개변수를 나머지 매개변수 (Rest Parameter)를 통해 구현 (spread 연산자를 통해서)
// >> 함수에 전달된 인자들을 배열의 형태로 전달 받음

// == 구현 방법 === //
// : 매개변수명 앞에 ...(spread 연산자) 를 붙여 정의
// > 데이터가 정확하게 지정될 변수가 있는 매개변수 목록들 보다 마지막에 위치 해야함
function spreadFunc(num1, num2, ...nums) {
  // num1 과 num2 에는 정확한 데이터값이 할당
  // : 배열을 담는 변수

  console.log(nums);
}

spreadFunc(1, 2, 3, 4, 5, 6, 7, 9, 10);
// [
//   3, 4,  5, 6,
//   7, 9, 10
// ]
spreadFunc(1, 2, [1, 2, 3]); // [ [ 1, 2, 3 ] ]
spreadFunc(1, 2, 3); // [ 3 ]
spreadFunc(1, 2); // []

// >> 스프레드 연산자는 요소를 배열에 전달하는 역할

// ? === 연습 문제: 전달된 여러 데이터 중 최소값 구하기 === //
// cf) Math.min() 함수: 복수의 인자를 받아 그 중 최소값을 반환
function findMin(...numbers) {
  // 1) 매개변수 내의 spread연산자: 나머지 매개변수
  //  전달된 인수들을 하나의 배열로 모음

  // 2) spread 연산자: 배열의 요소들을 개별 인수로 펼치는 역할
  let minNum = Math.min(...numbers);
  return minNum;
}

console.log(findMin(32, 12 , 34, 33)); // 12